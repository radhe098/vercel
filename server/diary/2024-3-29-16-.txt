Date: 20240329164932
Title: const express = require('express'); const fs = require('fs'); const path = require('path');  const app = express(); const port = 5000;  // Middleware to parse JSON bodies app.use(express.json());  // Directory where diary entries will be stored const diaryEntriesDir = path.join(__dirname, 'custom_diary_entries');  // Route handler to handle POST requests to save diary entries app.post('/diary/entry', async (req, res) => {   try {     const { date, title, content } = req.body; // Extract date, title, and content from request body      // Generate filename using current date and time components, separated by hyphens     const currentDate = new Date();     const filename = `${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}-${currentDate.getHours()}-${currentDate.getMinutes()}-${currentDate.getSeconds()}.txt`;     const filePath = path.join(diaryEntriesDir, filename); // Modify filePath to use custom directory      // Create directory if it doesn't exist     if (!fs.existsSync(diaryEntriesDir)) {       fs.mkdirSync(diaryEntriesDir, { recursive: true }); // Create directories recursively if they don't exist     }      // Write diary entry content to file     fs.writeFileSync(filePath, `Date: ${date}\nTitle: ${title}\nContent:\n${content}`);      // Send a success response     res.status(201).json({ success: true, message: 'Diary entry saved successfully', filename });   } catch (error) {     // If an error occurs, send an error response     console.error('Error saving diary entry:', error);     res.status(500).json({ success: false, message: 'Failed to save diary entry. Please try again later.' });   } });  app.listen(port, () => {   console.log(`Server is running on port ${port}`); });
Content:
undefined